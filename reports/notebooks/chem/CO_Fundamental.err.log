Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from matplotlib import pyplot as plt
import numpy as np
from scipy import interpolate

# first compute and plot Morse potential
r = np.linspace(0.75 * r_eq_SI, 2.5 * r_eq_SI, 1000)
V_r = De_SI * (1 - np.exp(-beta_SI * (r - r_eq_SI))) ** 2

V_r_spline = interpolate.UnivariateSpline(r, V_r, k=5)


# now define the expansion coefficients to expand the Morse potential as a polynomial
# harmonic
k = 2 * De_SI * beta_SI ** 2
f_spline = V_r_spline.derivative()
k_spline = f_spline.derivative()
#g_spline = k_spline.derivative()
#h_spline = g_spline.derivative()

k_num = k_spline(r_eq_SI)
#g_num = g_spline(r_eq_SI)
#h_num = h_spline(r_eq_SI)

V_H = 1/2 * k_num * (r -r_eq_SI) ** 2

# cubic
#g = -6 * De_SI * beta_SI ** 3

#V_C = V_H + 1/6 * g_num * (r - r_eq_SI) ** 3

# quartic 
#h = 14 * De_SI * beta_SI ** 4

#V_Q = V_H + V_C + 1/24 * h_num * (r - r_eq_SI) ** 4


plt.plot(r, V_r, 'red')
plt.plot(r, V_r_spline(r), 'blue')
#plt.plot(r, V_C, 'green')
#plt.plot(r, V_Q, 'purple')
plt.xlim(0.75 * r_eq_SI, 1.5 * r_eq_SI)
#plt.ylim(0, 2e-18)
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[11], line 6[0m
[1;32m      3[0m [38;5;28;01mfrom[39;00m [38;5;21;01mscipy[39;00m [38;5;28;01mimport[39;00m interpolate
[1;32m      5[0m [38;5;66;03m# first compute and plot Morse potential[39;00m
[0;32m----> 6[0m r [38;5;241m=[39m np[38;5;241m.[39mlinspace([38;5;241m0.75[39m [38;5;241m*[39m [43mr_eq_SI[49m, [38;5;241m2.5[39m [38;5;241m*[39m r_eq_SI, [38;5;241m1000[39m)
[1;32m      7[0m V_r [38;5;241m=[39m De_SI [38;5;241m*[39m ([38;5;241m1[39m [38;5;241m-[39m np[38;5;241m.[39mexp([38;5;241m-[39mbeta_SI [38;5;241m*[39m (r [38;5;241m-[39m r_eq_SI))) [38;5;241m*[39m[38;5;241m*[39m [38;5;241m2[39m
[1;32m      9[0m V_r_spline [38;5;241m=[39m interpolate[38;5;241m.[39mUnivariateSpline(r, V_r, k[38;5;241m=[39m[38;5;241m5[39m)

[0;31mNameError[0m: name 'r_eq_SI' is not defined

